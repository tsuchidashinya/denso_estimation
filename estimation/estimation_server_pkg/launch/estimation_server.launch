<?xml version="1.0"?>
<launch>
    <arg name="sim_or_real" default="sim"/>
    <arg name="hdf5_file_use" default="false"/>
    
    
    <node pkg="visualize_package" type="visualize_server" name="visualize_server" output="screen">
        <rosparam file="$(find visualize_package)/config/visualize_server.yaml" command="load" />
        <rosparam file="$(find annotation_common)/config/common_parameter.yaml" command="load" />
    </node>

    <group if="$(eval sim_or_real=='real')">
        <group if="$(arg hdf5_file_use)">
            <node pkg="hdf5_package" type="hdf5_open_server.py" name="hdf5_open_server" output="screen">
                <rosparam file="$(find estimation_server_pkg)/config/estimation_server_hdf5.yaml" command="load" ns="" />
            </node>
        </group>
        <group unless="$(arg hdf5_file_use)">
            <node pkg="sensor_package" type="SensorServer" name="sensor_server" output="screen">
                <rosparam file="$(find sensor_package)/config/sensor_server_real_photoneo.yaml" command="load"/>
                <rosparam file="$(find annotation_common)/config/common_parameter.yaml" command="load" />
            </node>
        </group>
    </group>
    <group if="$(eval sim_or_real=='sim')">
        <node pkg="sensor_package" type="SensorServer" name="sensor_server" output="screen">
            <rosparam file="$(find sensor_package)/config/sensor_server.yaml" command="load"/>
            <rosparam file="$(find annotation_common)/config/common_parameter.yaml" command="load" />
        </node>
    </group>
   
    <node pkg="network_server_pkg" type="network_server.py" name="network_server" output="screen">
        <rosparam file="$(find estimation_server_pkg)/config/estimation_server_network.yaml" command="load" ns="" />
    </node>

</launch>